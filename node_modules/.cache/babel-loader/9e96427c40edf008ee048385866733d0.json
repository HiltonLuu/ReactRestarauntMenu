{"ast":null,"code":"var _jsxFileName = \"/Users/hiltonluu/ke-sample-website/src/components/Foodanddrinks/Foodanddrinks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Papa from 'papaparse';\nimport { useCSVReader } from 'react-papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Foodanddrinks = filename => {\n  _s();\n\n  const [text, setText] = useState();\n  let result = {};\n  /*\n  const load = () => {\n      fetch( './fooddrinkdata.csv'  )\n          .then( response => response.text() )\n          .then(async responseText => {\n              result = await Papa.parse( responseText,  {header: true,});\n              console.log(result.data[0].category);\n          })\n  };\n   load();\n  */\n\n  const load = async () => {\n    result = await fetch('./fooddrinkdata.csv');\n    let responseText = await result.text();\n    let test = await Papa.parse(responseText, {\n      header: true\n    });\n    console.log(test);\n    return test;\n    /*\n    .then( response => response.text() )\n         .then( responseText => {\n             result = Papa.parse( responseText,  {header: true,});\n             \n             console.log(result.data[0].category);\n             */\n  };\n\n  let food;\n  load().then(done => {\n    food = done;\n  });\n  console.log(food);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Foodanddrinks, \"OLsxdnXVPQE4tgnORkK1gz9Zbzo=\");\n\n_c = Foodanddrinks;\nexport default Foodanddrinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Foodanddrinks\");","map":{"version":3,"names":["React","useState","Papa","useCSVReader","Foodanddrinks","filename","text","setText","result","load","fetch","responseText","test","parse","header","console","log","food","then","done"],"sources":["/Users/hiltonluu/ke-sample-website/src/components/Foodanddrinks/Foodanddrinks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Papa from 'papaparse';\nimport {useCSVReader} from 'react-papaparse';\n\n \nconst Foodanddrinks = (filename) => {\n    const [ text, setText ] = useState();\n    let result = {};\n    /*\n    const load = () => {\n        fetch( './fooddrinkdata.csv'  )\n            .then( response => response.text() )\n            .then(async responseText => {\n                result = await Papa.parse( responseText,  {header: true,});\n                console.log(result.data[0].category);\n            })\n    };\n\n    load();\n    */\n\n\n\n    const load = async () => {\n        result = await fetch( './fooddrinkdata.csv'  );\n        let responseText = await result.text();\n        let test = await Papa.parse( responseText,  {header: true,});\n        console.log(test);\n        \n        return test;\n       /*\n       .then( response => response.text() )\n            .then( responseText => {\n                result = Papa.parse( responseText,  {header: true,});\n                \n                console.log(result.data[0].category);\n                */\n            \n    };\n\n    let food;\n    load().then( done => {\n        food = done;\n    });\n\n    console.log(food);\n\n    return (<h1>hello</h1>);\n    \n\n    \n};\n\nexport default Foodanddrinks;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;;;AAGA,MAAMC,aAAa,GAAIC,QAAD,IAAc;EAAA;;EAChC,MAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,EAAlC;EACA,IAAIO,MAAM,GAAG,EAAb;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAKI,MAAMC,IAAI,GAAG,YAAY;IACrBD,MAAM,GAAG,MAAME,KAAK,CAAE,qBAAF,CAApB;IACA,IAAIC,YAAY,GAAG,MAAMH,MAAM,CAACF,IAAP,EAAzB;IACA,IAAIM,IAAI,GAAG,MAAMV,IAAI,CAACW,KAAL,CAAYF,YAAZ,EAA2B;MAACG,MAAM,EAAE;IAAT,CAA3B,CAAjB;IACAC,OAAO,CAACC,GAAR,CAAYJ,IAAZ;IAEA,OAAOA,IAAP;IACD;AACP;AACA;AACA;AACA;AACA;AACA;EAEK,CAfD;;EAiBA,IAAIK,IAAJ;EACAR,IAAI,GAAGS,IAAP,CAAaC,IAAI,IAAI;IACjBF,IAAI,GAAGE,IAAP;EACH,CAFD;EAIAJ,OAAO,CAACC,GAAR,CAAYC,IAAZ;EAEA,oBAAQ;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAR;AAIH,CA9CD;;GAAMb,a;;KAAAA,a;AAgDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}