{"ast":null,"code":"var _jsxFileName = \"/Users/hiltonluu/ke-sample-website/src/components/Foodanddrinks/Foodanddrinks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { useCSVReader } from 'react-papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Foodanddrinks = filename => {\n  _s();\n\n  const [text, setText] = useState(null);\n  let result = {};\n  /*\n  const load = () => {\n      fetch( './fooddrinkdata.csv'  )\n          .then( response => response.text() )\n          .then(async responseText => {\n              result = await Papa.parse( responseText,  {header: true,});\n              console.log(result.data[0].category);\n          })\n  };\n   load();\n  */\n\n  const load = async () => {\n    result = await fetch('./fooddrinkdata.csv').then(res => res.text());\n    let test = await Papa.parse(result, {\n      header: true\n    });\n    setText(test);\n  };\n\n  useEffect(() => {\n    load();\n  }, []);\n  return text && /*#__PURE__*/_jsxDEV(\"p\", {\n    children: text.data[0].category\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 22\n  }, this);\n};\n\n_s(Foodanddrinks, \"jweh7nNn4czRhfJqH+tUvZTnxVM=\");\n\n_c = Foodanddrinks;\nexport default Foodanddrinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Foodanddrinks\");","map":{"version":3,"names":["React","useState","useEffect","Papa","useCSVReader","Foodanddrinks","filename","text","setText","result","load","fetch","then","res","test","parse","header","data","category"],"sources":["/Users/hiltonluu/ke-sample-website/src/components/Foodanddrinks/Foodanddrinks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport {useCSVReader} from 'react-papaparse';\n\n \nconst Foodanddrinks = (filename) => {\n    const [ text, setText ] = useState(null);\n    let result = {};\n    /*\n    const load = () => {\n        fetch( './fooddrinkdata.csv'  )\n            .then( response => response.text() )\n            .then(async responseText => {\n                result = await Papa.parse( responseText,  {header: true,});\n                console.log(result.data[0].category);\n            })\n    };\n\n    load();\n    */\n\n    const load = async () => {\n        result = await fetch( './fooddrinkdata.csv'  ).then(res => res.text());\n        let test = await Papa.parse( result,  {header: true,});\n        setText(test);  \n    };\n\n    useEffect(() => {\n            load();   \n      }, []);\n\n    \n    return (text && (<p>{text.data[0].category}</p>));\n    \n\n    \n};\n\nexport default Foodanddrinks;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;;;AAGA,MAAMC,aAAa,GAAIC,QAAD,IAAc;EAAA;;EAChC,MAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;EACA,IAAIQ,MAAM,GAAG,EAAb;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGI,MAAMC,IAAI,GAAG,YAAY;IACrBD,MAAM,GAAG,MAAME,KAAK,CAAE,qBAAF,CAAL,CAAgCC,IAAhC,CAAqCC,GAAG,IAAIA,GAAG,CAACN,IAAJ,EAA5C,CAAf;IACA,IAAIO,IAAI,GAAG,MAAMX,IAAI,CAACY,KAAL,CAAYN,MAAZ,EAAqB;MAACO,MAAM,EAAE;IAAT,CAArB,CAAjB;IACAR,OAAO,CAACM,IAAD,CAAP;EACH,CAJD;;EAMAZ,SAAS,CAAC,MAAM;IACRQ,IAAI;EACT,CAFM,EAEJ,EAFI,CAAT;EAKA,OAAQH,IAAI,iBAAK;IAAA,UAAIA,IAAI,CAACU,IAAL,CAAU,CAAV,EAAaC;EAAjB;IAAA;IAAA;IAAA;EAAA,QAAjB;AAIH,CA/BD;;GAAMb,a;;KAAAA,a;AAiCN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}