{"ast":null,"code":"var _jsxFileName = \"/Users/hiltonluu/ke-sample-website/src/components/Foodanddrinks/Foodanddrinks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Papa from 'papaparse';\nimport { useCSVReader } from 'react-papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Foodanddrinks = filename => {\n  _s();\n\n  const [text, setText] = useState();\n  let result = {};\n  /*\n  const load = () => {\n      fetch( './fooddrinkdata.csv'  )\n          .then( response => response.text() )\n          .then(async responseText => {\n              result = await Papa.parse( responseText,  {header: true,});\n              console.log(result.data[0].category);\n          })\n  };\n   load();\n  */\n\n  const load = async () => {\n    return await fetch('./fooddrinkdata.csv');\n  };\n\n  let food = load().then(response => response.text()).then(responseText => {\n    result = Papa.parse(responseText, {\n      header: true\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Foodanddrinks, \"OLsxdnXVPQE4tgnORkK1gz9Zbzo=\");\n\n_c = Foodanddrinks;\nexport default Foodanddrinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Foodanddrinks\");","map":{"version":3,"names":["React","useState","Papa","useCSVReader","Foodanddrinks","filename","text","setText","result","load","fetch","food","then","response","responseText","parse","header"],"sources":["/Users/hiltonluu/ke-sample-website/src/components/Foodanddrinks/Foodanddrinks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Papa from 'papaparse';\nimport {useCSVReader} from 'react-papaparse';\n\n \nconst Foodanddrinks = (filename) => {\n    const [ text, setText ] = useState();\n    let result = {};\n    /*\n    const load = () => {\n        fetch( './fooddrinkdata.csv'  )\n            .then( response => response.text() )\n            .then(async responseText => {\n                result = await Papa.parse( responseText,  {header: true,});\n                console.log(result.data[0].category);\n            })\n    };\n\n    load();\n    */\n\n    const load = async () => {\n       return await fetch( './fooddrinkdata.csv'  );\n    };\n\n    let food = load()\n    .then( response => response.text() )\n    .then( responseText => {\n        result = Papa.parse( responseText,  {header: true,});\n    });\n\n    return (<h1>hello</h1>);\n\n    \n};\n\nexport default Foodanddrinks;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;;;AAGA,MAAMC,aAAa,GAAIC,QAAD,IAAc;EAAA;;EAChC,MAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,EAAlC;EACA,IAAIO,MAAM,GAAG,EAAb;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGI,MAAMC,IAAI,GAAG,YAAY;IACtB,OAAO,MAAMC,KAAK,CAAE,qBAAF,CAAlB;EACF,CAFD;;EAIA,IAAIC,IAAI,GAAGF,IAAI,GACdG,IADU,CACJC,QAAQ,IAAIA,QAAQ,CAACP,IAAT,EADR,EAEVM,IAFU,CAEJE,YAAY,IAAI;IACnBN,MAAM,GAAGN,IAAI,CAACa,KAAL,CAAYD,YAAZ,EAA2B;MAACE,MAAM,EAAE;IAAT,CAA3B,CAAT;EACH,CAJU,CAAX;EAMA,oBAAQ;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAR;AAGH,CA7BD;;GAAMZ,a;;KAAAA,a;AA+BN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}