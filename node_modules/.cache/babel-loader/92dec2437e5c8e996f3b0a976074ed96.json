{"ast":null,"code":"var _jsxFileName = \"/Users/hiltonluu/ke-sample-website/src/components/Foodanddrinks/Foodanddrinks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { useCSVReader } from 'react-papaparse';\nimport { FoodCategories } from '../Categories/Foodcategories';\nimport './Foodanddrinks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Foodanddrinks = cat => {\n  _s();\n\n  const [fullMenu, setFullMenu] = useState(null);\n  const [text, setText] = useState(null);\n  let result = {};\n  let subCat = \"\";\n\n  const load = async () => {\n    result = await fetch('./fooddrinkdata.csv').then(res => res.text());\n    let test = await Papa.parse(result, {\n      header: true\n    });\n    setText(test);\n    setFullMenu(test);\n  };\n\n  useEffect(() => {\n    load();\n    subCat = \"\";\n  }, []);\n  return text &&\n  /*#__PURE__*/\n\n  /*\n          <div className='foodDisplay'>\n              {fullMenu.data.filter(food1 => food1.value === cat.currentCategory.value)\n              .map(food2 => {\n                  let newCat = false;\n                  subCat != food2.subcategory ? newCat = true : newCat = false;\n                  \n                  subCat = food2.subcategory;\n                  return (\n                      <React.Fragment>\n                          {newCat && <h3 className='subCat'>{food2.subcategory}</h3>}\n                          {newCat &&\n                          subCat === 'Nigiri/Sashimi' && \n                          <React.Fragment>\n                              <span>2pc</span>\n                              <span>3pc</span>\n                          </React.Fragment>\n                          }\n  \n                              <ul >\n                                  <li key={food2.name} className='foodItem'>      \n                                      <span className='foodName'>{food2.name}</span>\n                                      {subCat === 'Nigiri/Sashimi' ?\n                                      <React.Fragment>\n                                          <p>Nigiri 2pc: {food2.price}</p>\n                                          <p>Sashimi 3pc: {food2.price2}</p>\n                                      </React.Fragment>\n                                      :\n                                          <span className='price'>{food2.price}</span>\n                                      }\n                                      \n                                      <p>{food2.descr}</p>\n                                  </li>\n                              </ul> \n                              \n                         \n                      </React.Fragment>\n                  )})\n              }\n  \n          </div>\n          */\n  _jsxDEV(\"div\", {\n    children: FoodCategories.filter(food1 => food1.value === cat.currentCategory.value).subcategories.map(food2 => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: food2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Foodanddrinks, \"MhiKYxy/ERhXKSVk1WO1oK9BCdI=\");\n\n_c = Foodanddrinks;\nexport default Foodanddrinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Foodanddrinks\");","map":{"version":3,"names":["React","useState","useEffect","Papa","useCSVReader","FoodCategories","Foodanddrinks","cat","fullMenu","setFullMenu","text","setText","result","subCat","load","fetch","then","res","test","parse","header","filter","food1","value","currentCategory","subcategories","map","food2"],"sources":["/Users/hiltonluu/ke-sample-website/src/components/Foodanddrinks/Foodanddrinks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport {useCSVReader} from 'react-papaparse';\nimport { FoodCategories } from '../Categories/Foodcategories';\nimport './Foodanddrinks.css';\n\n \nconst Foodanddrinks = (cat) => {\n    const [fullMenu, setFullMenu] = useState(null);\n    const [ text, setText ] = useState(null);\n    let result = {};\n    let subCat = \"\";\n\n    const load = async () => {\n        result = await fetch('./fooddrinkdata.csv').then(res => res.text());\n        let test = await Papa.parse( result,  {header: true,});\n        setText(test);\n        setFullMenu(test);  \n    };\n\n    useEffect(() => {\n            load();\n            subCat = \"\";   \n      }, []);\n\n    \n    return (text && (\n/*\n        <div className='foodDisplay'>\n            {fullMenu.data.filter(food1 => food1.value === cat.currentCategory.value)\n            .map(food2 => {\n                let newCat = false;\n                subCat != food2.subcategory ? newCat = true : newCat = false;\n                \n                subCat = food2.subcategory;\n                return (\n                    <React.Fragment>\n                        {newCat && <h3 className='subCat'>{food2.subcategory}</h3>}\n                        {newCat &&\n                        subCat === 'Nigiri/Sashimi' && \n                        <React.Fragment>\n                            <span>2pc</span>\n                            <span>3pc</span>\n                        </React.Fragment>\n                        }\n\n                            <ul >\n                                <li key={food2.name} className='foodItem'>      \n                                    <span className='foodName'>{food2.name}</span>\n                                    {subCat === 'Nigiri/Sashimi' ?\n                                    <React.Fragment>\n                                        <p>Nigiri 2pc: {food2.price}</p>\n                                        <p>Sashimi 3pc: {food2.price2}</p>\n                                    </React.Fragment>\n                                    :\n                                        <span className='price'>{food2.price}</span>\n                                    }\n                                    \n                                    <p>{food2.descr}</p>\n                                </li>\n                            </ul> \n                            \n                       \n                    </React.Fragment>\n                )})\n            }\n\n        </div>\n        */\n\n\n        <div>\n            {FoodCategories.filter(food1 => food1.value === cat.currentCategory.value).subcategories\n            .map(food2 => { return (\n                <React.Fragment>\n                <h3>{food2}</h3>\n                {/*<ul>\n                {\n                    fullMenu.data.filter(food3 => food3.subcategory === food2)\n                    .map(food4 => { return(\n                        <li key={food2.name} className='foodItem'>      \n                                    <span className='foodName'>{food2.name}</span>\n                                    <span className='price'>{food2.price}</span>\n                                    <p>{food2.descr}</p>\n                        </li>\n                    )})\n                }\n            </ul>*/}\n                </React.Fragment>\n            )})}\n        </div>\n    ));\n    \n\n    \n};\n\nexport default Foodanddrinks;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,OAAO,qBAAP;;;AAGA,MAAMC,aAAa,GAAIC,GAAD,IAAS;EAAA;;EAC3B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAAES,IAAF,EAAQC,OAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;EACA,IAAIW,MAAM,GAAG,EAAb;EACA,IAAIC,MAAM,GAAG,EAAb;;EAEA,MAAMC,IAAI,GAAG,YAAY;IACrBF,MAAM,GAAG,MAAMG,KAAK,CAAC,qBAAD,CAAL,CAA6BC,IAA7B,CAAkCC,GAAG,IAAIA,GAAG,CAACP,IAAJ,EAAzC,CAAf;IACA,IAAIQ,IAAI,GAAG,MAAMf,IAAI,CAACgB,KAAL,CAAYP,MAAZ,EAAqB;MAACQ,MAAM,EAAE;IAAT,CAArB,CAAjB;IACAT,OAAO,CAACO,IAAD,CAAP;IACAT,WAAW,CAACS,IAAD,CAAX;EACH,CALD;;EAOAhB,SAAS,CAAC,MAAM;IACRY,IAAI;IACJD,MAAM,GAAG,EAAT;EACL,CAHM,EAGJ,EAHI,CAAT;EAMA,OAAQH,IAAI;EAAA;;EAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGQ;IAAA,UACKL,cAAc,CAACgB,MAAf,CAAsBC,KAAK,IAAIA,KAAK,CAACC,KAAN,KAAgBhB,GAAG,CAACiB,eAAJ,CAAoBD,KAAnE,EAA0EE,aAA1E,CACAC,GADA,CACIC,KAAK,IAAI;MAAE,oBACZ,QAAC,KAAD,CAAO,QAAP;QAAA,uBACA;UAAA,UAAKA;QAAL;UAAA;UAAA;UAAA;QAAA;MADA;QAAA;QAAA;QAAA;MAAA,QADY;IAgBd,CAjBD;EADL;IAAA;IAAA;IAAA;EAAA,QA7CJ;AAqEH,CAxFD;;GAAMrB,a;;KAAAA,a;AA0FN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}