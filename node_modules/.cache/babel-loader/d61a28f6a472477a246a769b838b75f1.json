{"ast":null,"code":"var _jsxFileName = \"/Users/hiltonluu/ke-sample-website/src/components/Foodanddrinks/Foodanddrinks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { useCSVReader } from 'react-papaparse';\nimport { FoodCategories } from '../Categories/Foodcategories';\nimport './Foodanddrinks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst regularLayout = (menu, type) => {\n  {\n    /*#__PURE__*/\n    _jsxDEV(\"ul\", {\n      className: \"foodDisplay\",\n      children: menu.data.filter(food3 => food3.subcategory === type).map(food4 => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"foodItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"foodName\",\n            children: food4.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"price\",\n            children: food4.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: food4.descr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this)]\n        }, food4.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 6\n    }, this);\n  }\n};\n\nconst Foodanddrinks = cat => {\n  _s();\n\n  const [fullMenu, setFullMenu] = useState(null);\n  const [text, setText] = useState(null);\n  let result = {};\n  let subCat = \"\";\n\n  const load = async () => {\n    result = await fetch('./fooddrinkdata.csv').then(res => res.text());\n    let test = await Papa.parse(result, {\n      header: true\n    });\n    setText(test);\n    setFullMenu(test);\n  };\n\n  useEffect(() => {\n    load();\n    subCat = \"\";\n  }, []);\n  /*\n      FoodCategories.filter(food1 => food1.value === cat.currentCategory.value)[0].subcategories\n      .map(food2 => {\n          console.log(food2);\n          return (food2)\n      }); \n      */\n\n  return text &&\n  /*#__PURE__*/\n\n  /*\n          <div className='foodDisplay'>\n              {fullMenu.data.filter(food1 => food1.value === cat.currentCategory.value)\n              .map(food2 => {\n                  let newCat = false;\n                  subCat != food2.subcategory ? newCat = true : newCat = false;\n                  \n                  subCat = food2.subcategory;\n                  return (\n                      <React.Fragment>\n                          {newCat && <h3 className='subCat'>{food2.subcategory}</h3>}\n                          {newCat &&\n                          subCat === 'Nigiri/Sashimi' && \n                          <React.Fragment>\n                              <span>2pc</span>\n                              <span>3pc</span>\n                          </React.Fragment>\n                          }\n  \n                              <ul >\n                                  <li key={food2.name} className='foodItem'>      \n                                      <span className='foodName'>{food2.name}</span>\n                                      {subCat === 'Nigiri/Sashimi' ?\n                                      <React.Fragment>\n                                          <p>Nigiri 2pc: {food2.price}</p>\n                                          <p>Sashimi 3pc: {food2.price2}</p>\n                                      </React.Fragment>\n                                      :\n                                          <span className='price'>{food2.price}</span>\n                                      }\n                                      \n                                      <p>{food2.descr}</p>\n                                  </li>\n                              </ul> \n                              \n                         \n                      </React.Fragment>\n                  )})\n              }\n  \n          </div>\n          */\n  _jsxDEV(React.Fragment, {\n    children: FoodCategories.filter(food1 => food1.value === cat.currentCategory.value)[0].subcategories.map(food2 => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"subCat\",\n          children: food2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), \"regularLayout(fullMenu, food2)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Foodanddrinks, \"MhiKYxy/ERhXKSVk1WO1oK9BCdI=\");\n\n_c = Foodanddrinks;\nexport default Foodanddrinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Foodanddrinks\");","map":{"version":3,"names":["React","useState","useEffect","Papa","useCSVReader","FoodCategories","regularLayout","menu","type","data","filter","food3","subcategory","map","food4","name","price","descr","Foodanddrinks","cat","fullMenu","setFullMenu","text","setText","result","subCat","load","fetch","then","res","test","parse","header","food1","value","currentCategory","subcategories","food2"],"sources":["/Users/hiltonluu/ke-sample-website/src/components/Foodanddrinks/Foodanddrinks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport {useCSVReader} from 'react-papaparse';\nimport { FoodCategories } from '../Categories/Foodcategories';\nimport './Foodanddrinks.css';\n\n\nconst regularLayout = (menu, type) => {\n    {<ul className='foodDisplay'>\n    {menu.data.filter(food3 => food3.subcategory === type)\n        .map(food4 => { return(\n            <li key={food4.name} className='foodItem'>      \n                        <span className='foodName'>{food4.name}</span>\n                        <span className='price'>{food4.price}</span>\n                        <p>{food4.descr}</p>\n            </li>\n    )})}\n    </ul>} \n};\n\n\n\n \nconst Foodanddrinks = (cat) => {\n    const [fullMenu, setFullMenu] = useState(null);\n    const [ text, setText ] = useState(null);\n    let result = {};\n    let subCat = \"\";\n\n    const load = async () => {\n        result = await fetch('./fooddrinkdata.csv').then(res => res.text());\n        let test = await Papa.parse( result,  {header: true,});\n        setText(test);\n        setFullMenu(test);  \n    };\n\n    useEffect(() => {\n            load();\n            subCat = \"\";   \n      }, []);\n/*\n    FoodCategories.filter(food1 => food1.value === cat.currentCategory.value)[0].subcategories\n    .map(food2 => {\n        console.log(food2);\n        return (food2)\n    }); \n    */\n    return (text && (\n/*\n        <div className='foodDisplay'>\n            {fullMenu.data.filter(food1 => food1.value === cat.currentCategory.value)\n            .map(food2 => {\n                let newCat = false;\n                subCat != food2.subcategory ? newCat = true : newCat = false;\n                \n                subCat = food2.subcategory;\n                return (\n                    <React.Fragment>\n                        {newCat && <h3 className='subCat'>{food2.subcategory}</h3>}\n                        {newCat &&\n                        subCat === 'Nigiri/Sashimi' && \n                        <React.Fragment>\n                            <span>2pc</span>\n                            <span>3pc</span>\n                        </React.Fragment>\n                        }\n\n                            <ul >\n                                <li key={food2.name} className='foodItem'>      \n                                    <span className='foodName'>{food2.name}</span>\n                                    {subCat === 'Nigiri/Sashimi' ?\n                                    <React.Fragment>\n                                        <p>Nigiri 2pc: {food2.price}</p>\n                                        <p>Sashimi 3pc: {food2.price2}</p>\n                                    </React.Fragment>\n                                    :\n                                        <span className='price'>{food2.price}</span>\n                                    }\n                                    \n                                    <p>{food2.descr}</p>\n                                </li>\n                            </ul> \n                            \n                       \n                    </React.Fragment>\n                )})\n            }\n\n        </div>\n        */\n        \n\n        <React.Fragment>\n            {FoodCategories.filter(food1 => food1.value === cat.currentCategory.value)[0].subcategories\n            .map(food2 => { return (\n                <React.Fragment>\n                    <h3 className='subCat'>{food2}</h3>\n                    regularLayout(fullMenu, food2)\n                </React.Fragment>\n            )})}\n        </React.Fragment>\n            \n        \n    ));\n    \n\n    \n};\n\nexport default Foodanddrinks;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,OAAO,qBAAP;;;AAGA,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;EAClC;IAAC;IAAA;MAAI,SAAS,EAAC,aAAd;MAAA,UACAD,IAAI,CAACE,IAAL,CAAUC,MAAV,CAAiBC,KAAK,IAAIA,KAAK,CAACC,WAAN,KAAsBJ,IAAhD,EACIK,GADJ,CACQC,KAAK,IAAI;QAAE,oBACZ;UAAqB,SAAS,EAAC,UAA/B;UAAA,wBACY;YAAM,SAAS,EAAC,UAAhB;YAAA,UAA4BA,KAAK,CAACC;UAAlC;YAAA;YAAA;YAAA;UAAA,QADZ,eAEY;YAAM,SAAS,EAAC,OAAhB;YAAA,UAAyBD,KAAK,CAACE;UAA/B;YAAA;YAAA;YAAA;UAAA,QAFZ,eAGY;YAAA,UAAIF,KAAK,CAACG;UAAV;YAAA;YAAA;YAAA;UAAA,QAHZ;QAAA,GAASH,KAAK,CAACC,IAAf;UAAA;UAAA;UAAA;QAAA,QADY;MAMlB,CAPD;IADA;MAAA;MAAA;MAAA;IAAA;EASK;AACT,CAXD;;AAgBA,MAAMG,aAAa,GAAIC,GAAD,IAAS;EAAA;;EAC3B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAAEqB,IAAF,EAAQC,OAAR,IAAoBtB,QAAQ,CAAC,IAAD,CAAlC;EACA,IAAIuB,MAAM,GAAG,EAAb;EACA,IAAIC,MAAM,GAAG,EAAb;;EAEA,MAAMC,IAAI,GAAG,YAAY;IACrBF,MAAM,GAAG,MAAMG,KAAK,CAAC,qBAAD,CAAL,CAA6BC,IAA7B,CAAkCC,GAAG,IAAIA,GAAG,CAACP,IAAJ,EAAzC,CAAf;IACA,IAAIQ,IAAI,GAAG,MAAM3B,IAAI,CAAC4B,KAAL,CAAYP,MAAZ,EAAqB;MAACQ,MAAM,EAAE;IAAT,CAArB,CAAjB;IACAT,OAAO,CAACO,IAAD,CAAP;IACAT,WAAW,CAACS,IAAD,CAAX;EACH,CALD;;EAOA5B,SAAS,CAAC,MAAM;IACRwB,IAAI;IACJD,MAAM,GAAG,EAAT;EACL,CAHM,EAGJ,EAHI,CAAT;EAIJ;AACA;AACA;AACA;AACA;AACA;AACA;;EACI,OAAQH,IAAI;EAAA;;EAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGQ,QAAC,KAAD,CAAO,QAAP;IAAA,UACKjB,cAAc,CAACK,MAAf,CAAsBuB,KAAK,IAAIA,KAAK,CAACC,KAAN,KAAgBf,GAAG,CAACgB,eAAJ,CAAoBD,KAAnE,EAA0E,CAA1E,EAA6EE,aAA7E,CACAvB,GADA,CACIwB,KAAK,IAAI;MAAE,oBACZ,QAAC,KAAD,CAAO,QAAP;QAAA,wBACI;UAAI,SAAS,EAAC,QAAd;UAAA,UAAwBA;QAAxB;UAAA;UAAA;UAAA;QAAA,QADJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADY;IAKd,CAND;EADL;IAAA;IAAA;IAAA;EAAA,QA7CJ;AA4DH,CApFD;;GAAMnB,a;;KAAAA,a;AAsFN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}